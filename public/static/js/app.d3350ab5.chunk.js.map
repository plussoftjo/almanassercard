{"version":3,"sources":["src/components/ContentDrawer/index.js","src/constants/env.js","src/containers/Main/components/Card.js","src/services/apis.js","src/stores/Categories/CategoriesType.js","src/stores/Categories/CategoriesActions.js","src/stores/User/UserTypes.js","src/stores/User/UserActions.js","src/translations/index.js","src/containers/Main/index.js","src/containers/Aboutus/index.js","src/containers/ContactUs/index.js","src/containers/Reports/index.js","src/navigation/DrawerNavigation.js","src/containers/OrderHistory/DataPicker.js","src/containers/OrderHistory/index.js","src/containers/Fav/components/Card.js","src/containers/Fav/index.js","src/containers/Settings/Components/Header.js","src/containers/Settings/Components/ListItem.js","src/containers/Settings/index.js","src/navigation/BottomNavNavigation.js","src/containers/CategoriesShow/components/Card.js","src/containers/CategoriesShow/index.js","src/components/Loader/index.js","src/components/AlertBox/index.js","src/containers/Checkout/index.js","src/containers/Code/index.js","src/containers/Search/components/Card.js","src/containers/Search/index.js","src/containers/UpdateProfile/index.js","src/containers/Language/index.js","src/navigation/MainNavigation.js","src/containers/Auth/Login/index.js","src/stores/Categories/CategoriesReducers.js","src/stores/User/UserReducers.js","src/stores/rootReducer.js","src/stores/store.js","src/Root.js","App.js","src/assets/Auth/background.jpg","src/assets/logo.png","assets/fonts/SpaceMono-Regular.ttf"],"names":["connect","state","user","dispatch","props","DrawerContentScrollView","contentContainerStyle","backgroundColor","View","style","paddingHorizontal","paddingVertical","justifyContent","alignItems","fontSize","textAlign","color","flexDirection","borderColor","borderWidth","borderTopRightRadius","borderTopLeftRadius","padding","textTransform","category","name","wallet","amount","width","height","fill","id","DrawerItemList","env","server","server2","data","onPress","card_height","Dimensions","get","theme","useTheme","TouchableOpacity","margin","borderRadius","Image","source","uri","image","resizeMode","position","bottom","left","borderBottomRightRadius","borderBottomLeftRadius","title","apis","main","index","onSuccess","onError","axios","then","res","catch","err","auth","register","payload","post","login","token","defaults","headers","common","update","order","store","search","reports","fetch","CategoriesType","SET_CATEGORIES","SET_SELECTED_CATEGORIES","SET_SELECTED_SUB_CATEGORIES","SET_CODE","SET_LAST_CATEGORIES","SET_ORDER","setCategories","item","type","setSelectedCategories","setSelectedSubCategories","setCode","setLastCategories","setOrder","UserTypes","SET_USER","SET_ORDER_HISTORY","SET_FAV","SET_LANG","setUser","translationGetters","ar","require","en","translate","memoize","key","config","i18n","t","JSON","stringify","setI18nConfig","lang","isRTL","a","async","AsyncStorage","setItem","I18nManager","forceRTL","translations","locale","SetFirstTime","setCategoriesGlobal","setUserGlobal","setOrderHistory","setFav","SetLanguage","navigation","useState","categories","otherCategories","setOtherCategories","setLang","useEffect","other_categories","error","console","log","getItem","index_history","response","fav_list","parse","check_user","rtl","setup_lang","onPressCategory","navigate","LeftBtn","openDrawer","LeftBtnAction","icon","RightBtn","RightBtnAction","flex","accessoryLeft","accessoryRight","ScrollView","showsVerticalScrollIndicator","map","trg","Card","goBack","paddingTop","React","phone","email","message","setData","placeholder","value","onChangeText","nextValue","status","types","IndexPath","selectedIndex","setSelectedIndex","BackIcon","orders","setOrders","total_amount","setTotalAmount","onSelect","row","user_id","tot","forEach","total","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","borderLeftColor","borderLeftWidth","Drawer","createDrawerNavigator","Navigator","initialRouteName","drawerContent","Screen","component","Main","Reports","Aboutus","ContactUs","_change_codes","setCodes","Date","dateFrom","setDateFrom","dateTo","setDateTo","alignContent","label","date","nextDate","size","codes","order_history","OrderCard","code","sub_categories","last_categories","SubTitle","marginHorizontal","marginVertical","created_at","substring","last_categories_id","length","fav","top","settings","divider","leftIcon","Logout","removeItem","marginTop","marginBottom","Tab","createBottomTabNavigator","BottomTapNavigation","screenOptions","route","tabBarIcon","iconName","focused","Feather","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","DrawerNavigation","OrderHistory","Fav","Settings","fontWeight","setType","lastCategories","setLastCategoriesx","onPressSubCategories","multi","onPressLastCategories","selected_category","fav_storage","x","push","press_heart","zIndex","_get_color","nextColor","qty","setError","load","setLoad","selected_sub_category","description","selected_last_categories","AlertBox","has_last","categories_id","sub_categories_id","evaProps","Loader","LinearGradient","colors","Clipboard","setString","searchInput","setSearchInput","once","setOnce","Text","_user","oldPassword","newPassword","secureTextEntry","_data","alert","save","set_locale","isRtl","languages","press_lang","Updates","reload","changeLanguage","checked","Stack","createStackNavigator","animation","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","closeConfig","duration","easing","Easing","linear","MainNavigation","headerShown","gestureEnabled","gestureDirection","cardStyleInterpolator","CardStyleInterpolators","forFadeFromBottomAndroid","transitionSpec","open","close","headerMode","BottomNavNavigation","CategoriesShow","Checkout","Code","Search","UpdateProfile","Language","password","loader","setLoader","success","setSuccess","ImageBackground","setTimeout","intintalState","categories_list","reducer","action","rootReducer","combineReducers","CategoriesReducers","UserReducers","createStore","App","isLoadingComplete","setLoadingComplete","screen","setScreen","SplashScreen","Font","Ionicons","font","warn","loadResourcesAndDataAsync","skipLoadingScreen","styles","container","icons","EvaIconsPack","eva","Platform","OS","StatusBar","barStyle","NavigationContainer","Login","StyleSheet","create","module","exports"],"mappings":"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","file":"static/js/app.d3350ab5.chunk.js","sourcesContent":["import React from 'react'\r\n/** Components */\r\nimport {View,} from 'react-native'\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport { Text,Icon,Button } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nconst ContentDrawer = (props) => {\r\n\r\n  let sign_out = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem(\"token\");\r\n      props.navigation.navigate(\"Login\");\r\n    } catch (error) {}\r\n  };\r\n    return (\r\n      <DrawerContentScrollView\r\n        contentContainerStyle={{ backgroundColor: \"#42b4e6\" }}\r\n        {...props}\r\n      >\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 10,\r\n            paddingVertical: 40,\r\n            backgroundColor: \"#42b4e6\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: 16,\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Al-ManaseerCard\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            borderColor: \"#eee\",\r\n            borderWidth: 1,\r\n            borderTopRightRadius: 5,\r\n            borderTopLeftRadius: 5,\r\n            backgroundColor: \"#099bdb\",\r\n          }}\r\n        >\r\n          <View style={{ padding: 10 }}>\r\n            <Text\r\n              style={{ color: \"white\", textTransform: \"uppercase\" }}\r\n              category=\"s1\"\r\n            >\r\n              {props.user.user.name}\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{ padding: 10, flexDirection: \"row\", alignItems: \"center\" }}\r\n          >\r\n            {props.user.user.wallet && (\r\n              <Text\r\n                style={{ color: \"white\", textTransform: \"uppercase\" }}\r\n                category=\"s1\"\r\n              >\r\n                {props.user.user.wallet.amount}JD\r\n              </Text>\r\n            )}\r\n            <Icon\r\n              name=\"credit-card-outline\"\r\n              style={{ width: 20, height: 20 }}\r\n              fill=\"white\"\r\n            />\r\n          </View>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            borderColor: \"#eee\",\r\n            borderWidth: 1,\r\n            borderTopRightRadius: 5,\r\n            borderTopLeftRadius: 5,\r\n            backgroundColor: \"#099bdb\",\r\n          }}\r\n        >\r\n          <View style={{ padding: 10 }}>\r\n            <Text\r\n              style={{ color: \"white\", textTransform: \"uppercase\" }}\r\n              category=\"s1\"\r\n            >\r\n              Sale Point Number\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{ padding: 10, flexDirection: \"row\", alignItems: \"center\" }}\r\n          >\r\n            {props.user.user && (\r\n              <Text\r\n                style={{ color: \"white\", textTransform: \"uppercase\" }}\r\n                category=\"s1\"\r\n              >\r\n                0000{props.user.user.id}\r\n              </Text>\r\n            )}\r\n          </View>\r\n        </View>\r\n        <View style={{ backgroundColor: \"white\" }}>\r\n          <DrawerItemList {...props} />\r\n        </View>\r\n      </DrawerContentScrollView>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentDrawer);","let env = {\r\n  // Server\r\n  server: \"http://35.226.72.208:3000/\",\r\n  server2: \"http://35.226.72.208:3000/\",\r\n};\r\n\r\nexport default env;","import React from 'react'\r\n/** Components */\r\nimport {View,Image,Dimensions,TouchableOpacity} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\nimport {env} from '../../../constants'\r\nexport default ({data,onPress}) => {\r\n    let height = Dimensions.get('screen').height\r\n    let card_height = height / 3.5;\r\n    let theme = useTheme()\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n        style={{\r\n          margin: 10,\r\n          borderColor: theme[\"color-primary-transparent-100\"],\r\n          borderWidth: 0.5,\r\n          borderRadius: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          source={{ uri: env.server + \"storage/\" + data.image }}\r\n          style={{ width: \"100%\", height: card_height, borderRadius: 10 }}\r\n          resizeMode=\"stretch\"\r\n        />\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"rgba(0,100,255,0.5)\",\r\n              paddingVertical: 5,\r\n              borderBottomRightRadius: 10,\r\n              borderBottomLeftRadius:10,\r\n              paddingHorizontal: 3,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: theme[\"text-alternate-color\"],\r\n                textAlign: \"center\",\r\n              }}\r\n              category=\"s1\"\r\n            >\r\n              {data.title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n}","import axios from 'axios'\r\nimport {env} from '../constants'\r\nlet apis = {\r\n  // Main\r\n  main: {\r\n    index: function (onSuccess, onError) {\r\n      axios\r\n        .get(env.server + \"api/main/index\")\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n  },\r\n  auth: {\r\n    register: function (payload, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/auth/register\", payload)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n    login: function (payload, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/auth/login\", payload)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n    index: function (payload, onSuccess, onError) {\r\n      axios\r\n        .get(env.server + \"api/auth/get/\" + payload)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n    auth: function (token,onSuccess, onError) {\r\n      axios.defaults.headers.common = {\r\n        'Authorization': \"Bearer \" + token,\r\n        \"X-Requested-With\": \"XMLHttpRequest\",\r\n      };\r\n      axios\r\n        .get(env.server + \"api/auth/auth\")\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n    update: function (payload, onSuccess, onError) {\r\n      axios\r\n        .post(env.server + \"api/auth/update_password\", payload)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    }\r\n  },\r\n  order:{\r\n    store:function (payload,onSuccess,onError) {\r\n      axios\r\n        .post(env.server + \"api/order/store\", payload)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    },\r\n    index:function(id,onSuccess,onError) {\r\n      axios\r\n        .get(env.server + \"api/order/index/\" + id)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    }\r\n  },\r\n  search:{\r\n    index:function(title,onSuccess,onError) {\r\n      axios\r\n        .post(env.server + \"api/search/index\", {title:title})\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    }\r\n  },\r\n  reports:{\r\n    fetch:function(data,onSuccess,onError) {\r\n      axios\r\n        .post(env.server + \"api/report/fetch\", data)\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n    }\r\n  }\r\n};\r\n\r\nexport default apis;"," let CategoriesType = {\n    SET_CATEGORIES:'SET_CATEGORIES',\n    SET_SELECTED_CATEGORIES:'SET_SELECTED_CATEGORIES',\n    SET_SELECTED_SUB_CATEGORIES:'SET_SELECTED_SUB_CATEGORIES',\n    SET_CODE:'SET_CODE',\n    SET_LAST_CATEGORIES:'SET_LAST_CATEGORIES',\n    SET_ORDER:\"SET_ORDER\"\n}\n\nexport default CategoriesType","import CategoriesType from './CategoriesType'\n\nexport const setCategories = item => {\n    return {\n        type:CategoriesType.SET_CATEGORIES,\n        payload:item\n    }\n}\n\nexport const setSelectedCategories = item => {\n    return {\n        type:CategoriesType.SET_SELECTED_CATEGORIES,\n        payload:item\n    }\n}\n\nexport const setSelectedSubCategories = item => {\n    return {\n        type:CategoriesType.SET_SELECTED_SUB_CATEGORIES,\n        payload:item\n    }\n}\n\nexport const setCode = item => {\n    return {\n        type:CategoriesType.SET_CODE,\n        payload:item\n    }\n}\n\nexport const setLastCategories = item => {\n    return {\n        type:CategoriesType.SET_LAST_CATEGORIES,\n        payload:item\n    }\n}\n\nexport const setOrder = (item) => {\n  return {\n    type: CategoriesType.SET_ORDER,\n    payload: item,\n  };\n};\n"," let UserTypes = {\n    SET_USER:'SET_USER',\n    SET_ORDER_HISTORY:'SET_ORDER_HISTORY',\n    SET_FAV:'SET_FAV',\n    SET_LANG:'SET_LANG'\n}\n\nexport default UserTypes;","import UserTypes from './UserTypes'\n\nexport const setUser = item => {\n    return {\n        type:UserTypes.SET_USER,\n        payload:item\n    }\n}\n\nexport const setOrderHistory = item => {\n    return {\n        type:UserTypes.SET_ORDER_HISTORY,\n        payload:item\n    }\n}\n\nexport const setFav = item => {\n    return {\n        type:UserTypes.SET_FAV,\n        payload:item\n    }\n}\n\nexport const SetLanguage = (item) => {\n  return {\n    type: UserTypes.SET_LANG,\n    payload: item,\n  };\n};","import i18n from \"i18n-js\";\nimport memoize from \"lodash.memoize\"; \nimport {I18nManager} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { Updates } from 'expo';\n\nconst translationGetters = {\n  ar: () => require('./ar.json'),\n  en: () => require('./en.json'),\n};\n\nexport const translate = memoize(\n  (key, config) => i18n.t(key, config),\n  (key, config) => (config ? key + JSON.stringify(config) : key)\n);\n\nexport const setI18nConfig = async(lang,isRTL) => {\n  await AsyncStorage.setItem('locale', lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n};\n\nexport const SetFirstTime = async (lang, isRTL) => {\n  await AsyncStorage.setItem('locale', lang);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n};\n\nexport const changeLanguage = async(lang,isRTL) => {\n  await AsyncStorage.setItem('locale',lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n  Updates.reload();\n}","import React,{useState,useEffect} from 'react'\r\n/** Components */\r\nimport {View,ScrollView,TouchableOpacity,} from 'react-native'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport {\r\n  Layout,\r\n  TopNavigation,\r\n  Icon,\r\n  Text,\r\n  useTheme,\r\n  TopNavigationAction,\r\n} from \"@ui-kitten/components\";\r\nimport {Card} from './components'\r\nimport {apis} from '../../services'\r\nimport {\r\n  setCategories,\r\n  setSelectedCategories,\r\n  setUser,\r\n  setOrderHistory,\r\n  setFav,\r\n  SetLanguage,\r\n} from \"../../stores\";\r\nimport { connect } from \"react-redux\";\r\nimport {translate} from '../../translations'\r\n\r\nconst Main = ({\r\n  setCategoriesGlobal,\r\n  setSelectedCategories,\r\n  navigation,\r\n  setUserGlobal,\r\n  setOrderHistory,\r\n  setFav,\r\n  SetLanguage,\r\n}) => {\r\n  // Statics\r\n  let theme = useTheme();\r\n  let [categories, setCategories] = useState([]);\r\n  let [otherCategories, setOtherCategories] = useState([]);\r\n  let [lang, setLang] = useState(\"en\"); // Language\r\n  // Set Language\r\n  let setup_lang = async () => {\r\n    const locale = await AsyncStorage.getItem(\"locale\");\r\n    if (!locale) {\r\n      setLang(\"en\");\r\n      SetLanguage({ title: \"en\", rtl: false });\r\n    } else {\r\n      if (locale == \"en\") {\r\n        setLang(\"en\");\r\n        SetLanguage({ title: \"en\", rtl: false });\r\n      } else if (locale == \"ar\") {\r\n        setLang(\"ar\");\r\n        SetLanguage({ title: \"ar\", rtl: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  let check_user = async () => {\r\n    const token = await AsyncStorage.getItem(\"token\");\r\n    if (token) {\r\n      apis.auth.auth(\r\n        token,\r\n        (res) => {\r\n          setUserGlobal(res.user);\r\n          index_history(res.user.id);\r\n        },\r\n        (err) => {\r\n          console.log(err.response);\r\n        }\r\n      );\r\n    }\r\n\r\n    let index_history = (id) => {\r\n      apis.order.index(\r\n        id,\r\n        (res) => {\r\n          setOrderHistory(res);\r\n        },\r\n        (err) => {\r\n          console.log(err.response);\r\n        }\r\n      );\r\n    };\r\n\r\n    // Check Fav\r\n    const fav_list = await AsyncStorage.getItem(\"fav\");\r\n    if (fav_list) {\r\n      setFav(JSON.parse(fav_list));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    /** Fetch Axios Data */\r\n    apis.main.index(\r\n      (data) => {\r\n        // Categories set\r\n        setCategories(data.categories);\r\n        setCategoriesGlobal(data.categories);\r\n        setOtherCategories(data.other_categories)\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    check_user();\r\n    setup_lang();\r\n  }, []);\r\n\r\n  let onPressCategory = (data) => {\r\n    setSelectedCategories(data);\r\n    navigation.navigate(\"CategoriesShow\");\r\n  };\r\n\r\n  /** Header */\r\n  const LeftBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.openDrawer();\r\n      }}\r\n    >\r\n      <Icon {...props} fill=\"black\" name={\"menu-outline\"} />\r\n    </TouchableOpacity>\r\n  );\r\n  const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n\r\n  /** Header Right Action */\r\n  const RightBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.navigate(\"Search\");\r\n      }}\r\n    >\r\n      <Icon {...props} fill=\"black\" name={\"search-outline\"} />\r\n    </TouchableOpacity>\r\n  );\r\n  const RightBtnAction = () => <TopNavigationAction icon={RightBtn} />;\r\n  let Header = () => (\r\n    <TopNavigation\r\n      accessoryLeft={LeftBtnAction}\r\n      accessoryRight={RightBtnAction}\r\n      title={\"Al-ManaseerCards\"}\r\n    />\r\n  );\r\n  /** End Header */\r\n\r\n  /** Return And render */\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Header />\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <View style={{ paddingVertical: 15, paddingHorizontal: 10 }}>\r\n          <Text style={{ color: theme[\"color-text-hint\"] }}>\r\n            {translate(\"main.top_title\", lang)}{\" \"}\r\n          </Text>\r\n        </View>\r\n        {categories.map((trg, index) => (\r\n          <Card key={index} data={trg} onPress={onPressCategory} />\r\n        ))}\r\n        <View style={{ paddingVertical: 15, paddingHorizontal: 10 }}>\r\n          <Text style={{ color: theme[\"color-text-hint\"] }}>\r\n            {translate(\"main.other_categories\", lang)}{\" \"}\r\n          </Text>\r\n        </View>\r\n        {otherCategories.map((trg, index) => (\r\n          <Card key={index} data={trg} onPress={onPressCategory} />\r\n        ))}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCategoriesGlobal: (item) => dispatch(setCategories(item)),\r\n    setSelectedCategories: (item) => dispatch(setSelectedCategories(item)),\r\n    setUserGlobal: (item) => dispatch(setUser(item)),\r\n    setOrderHistory: (item) => dispatch(setOrderHistory(item)),\r\n    setFav: (item) => dispatch(setFav(item)),\r\n    SetLanguage: (item) => dispatch(SetLanguage(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import React from 'react'\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {\r\n    Layout, Text, useTheme, TopNavigation,Icon,TopNavigationAction} from '@ui-kitten/components'\r\nexport default ({navigation}) => {\r\n    let theme = useTheme()\r\n\r\n    const LeftBtn = (props) => (\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                navigation.goBack();\r\n            }}\r\n        >\r\n            <Icon {...props} fill=\"black\" name={\"arrow-ios-back-outline\"} />\r\n        </TouchableOpacity>\r\n    );\r\n    const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n\r\n\r\n    /** Header */\r\n    let Header = () => <TopNavigation accessoryLeft={LeftBtnAction} title={\"About Us \"} />;\r\n    return (\r\n        <Layout style={{ flex: 1 }}>\r\n            <Header />\r\n            <View style={{padding:30}}>\r\n                <Text category=\"s1\" style={{color:theme['text-hint-color']}}>Al-ManaseerCard</Text>\r\n                <Text style={{paddingTop:30}}>\r\n                    Al-ManaseerCard Sale Cards Online.\r\n                </Text>\r\n                <Text style={{paddingTop:10}}>\r\n                    Buy Online Digital Card With Al-ManaseerCard App, You can get cards From Your Wallet Amount.\r\n                </Text>\r\n            </View>\r\n        </Layout>\r\n    )\r\n}","import React from 'react'\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {\r\n    Layout, Text, useTheme, TopNavigation,Icon,TopNavigationAction,Button,Input} from '@ui-kitten/components'\r\nexport default ({navigation}) => {\r\n    let theme = useTheme()\r\n\r\n    const LeftBtn = (props) => (\r\n        <TouchableOpacity\r\n            onPress={() => {\r\n                navigation.goBack();\r\n            }}\r\n        >\r\n            <Icon {...props} fill=\"black\" name={\"arrow-ios-back-outline\"} />\r\n        </TouchableOpacity>\r\n    );\r\n    const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n    /** Header */\r\n    let Header = () => <TopNavigation accessoryLeft={LeftBtnAction} title={\"Contact Us \"} />;\r\n\r\n    let [data,setData] = React.useState({\r\n        name:'',\r\n        phone:'',\r\n        email:'',\r\n        message:''\r\n    }) \r\n\r\n    return (\r\n        <Layout style={{ flex: 1 }}>\r\n            <Header />\r\n            <View style={{padding:30}}>\r\n                <Text category=\"s1\" style={{color:theme['text-hint-color']}}>Al-ManaseerCard</Text>\r\n                <Text style={{paddingTop:30}}>\r\n                    Al-ManaseerCard Sale Cards Online.\r\n                </Text>\r\n                <View style={{ height: 15 }}></View>\r\n                <Input\r\n                    placeholder='Name'\r\n                    value={data.name}\r\n                    onChangeText={nextValue => setData({...data,name:nextValue})}\r\n                />\r\n                <Input\r\n                    placeholder='Phone'\r\n                    value={data.phone}\r\n                    onChangeText={nextValue => setData({ ...data, phone: nextValue })}\r\n                />\r\n                <Input\r\n                    placeholder='E-mail'\r\n                    value={data.email}\r\n                    onChangeText={nextValue => setData({ ...data, email: nextValue })}\r\n                />\r\n                <Input\r\n                    placeholder='Message'\r\n                    value={data.message}\r\n                    onChangeText={nextValue => setData({ ...data, message: nextValue })}\r\n                />\r\n                <View style={{height:15}}></View>\r\n                <Button status=\"primary\">Send Message</Button>\r\n            </View>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { View, ScrollView,  } from \"react-native\";\r\nimport {\r\n  Layout,\r\n  Icon,\r\n  Text,\r\n  TopNavigation,\r\n  TopNavigationAction,\r\n  IndexPath,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n} from \"@ui-kitten/components\";\r\nimport apis from \"../../services/apis\";\r\nimport { connect } from \"react-redux\";\r\nlet Reports = ({ navigation, user }) => {\r\n  let types = [\"Today\", \"Month\", \"All\"];\r\n  const [selectedIndex, setSelectedIndex] = React.useState(new IndexPath(0));\r\n  const BackIcon = (props) => (\r\n    <Icon\r\n      onPress={() => {\r\n        navigation.goBack();\r\n      }}\r\n      {...props}\r\n      name=\"arrow-back\"\r\n    />\r\n  );\r\n  const BackAction = () => <TopNavigationAction icon={BackIcon} />;\r\n\r\n  const [orders, setOrders] = React.useState([]);\r\n\r\n  let [total_amount, setTotalAmount] = React.useState(0);\r\n  let total = (res) => {\r\n    let tot = 0;\r\n    res.forEach((trg, index) => {\r\n      tot = tot + trg.amount;\r\n    });\r\n    setTotalAmount(tot);\r\n  };\r\n  const search = () => {\r\n    let data = {\r\n      user_id: user.user.id,\r\n      type: types[selectedIndex.row],\r\n    };\r\n    apis.reports.fetch(\r\n      data,\r\n      (res) => {\r\n        setOrders(res);\r\n        total(res);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <TopNavigation accessoryLeft={BackAction} title=\"Reports\" />\r\n      <View style={{ padding: 15 }}>\r\n        <Select\r\n          selectedIndex={selectedIndex}\r\n          onSelect={(index) => setSelectedIndex(index)}\r\n          value={types[selectedIndex.row]}\r\n        >\r\n          {types.map((trg, index) => (\r\n            <SelectItem key={index} title={trg} />\r\n          ))}\r\n        </Select>\r\n        <View style={{ height: 10 }}></View>\r\n        <Button status=\"success\" onPress={search}>\r\n          Search\r\n        </Button>\r\n      </View>\r\n      <View\r\n        style={{\r\n          height: 1,\r\n          width: \"100%\",\r\n          borderTopColor: \"#6666\",\r\n          borderTopWidth: 1,\r\n        }}\r\n      ></View>\r\n      <ScrollView contentContainerStyle={{ padding: 15 }}>\r\n        <View style={{ borderRadius: 3, borderWidth: 1, borderColor: \"#888\" }}>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderBottomColor: \"#888\",\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                padding: 3,\r\n                borderLeftColor: \"#888\",\r\n                borderLeftWidth: 1,\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Text category=\"s1\">Code</Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                padding: 3,\r\n                borderLeftColor: \"#888\",\r\n                borderLeftWidth: 1,\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Text category=\"s1\">Amount</Text>\r\n            </View>\r\n          </View>\r\n          {orders.map((trg, index) => (\r\n            <View\r\n              key={index}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                borderBottomColor: \"#888\",\r\n                borderBottomWidth: 1,\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  padding: 3,\r\n                  borderLeftColor: \"#888\",\r\n                  borderLeftWidth: 1,\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                <Text>{trg.categories.title}</Text>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  padding: 3,\r\n                  borderLeftColor: \"#888\",\r\n                  borderLeftWidth: 1,\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                <Text>{trg.amount}</Text>\r\n              </View>\r\n            </View>\r\n          ))}\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              borderBottomColor: \"#888\",\r\n              borderBottomWidth: 1,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                padding: 3,\r\n                borderLeftColor: \"#888\",\r\n                borderLeftWidth: 1,\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Text category=\"s1\">Total</Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                padding: 3,\r\n                borderLeftColor: \"#888\",\r\n                borderLeftWidth: 1,\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <Text category=\"s1\">{total_amount}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reports);\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  AsyncStorage,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport ContentDrawer from \"../components/ContentDrawer\";\r\nimport Main from \"../containers/Main\";\r\nimport Aboutus from '../containers/Aboutus'\r\nimport ContactUs from '../containers/ContactUs'\r\nimport Reports from '../containers/Reports'\r\nimport {translate} from '../translations'\r\nimport {connect} from 'react-redux'\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst DrawerNavigation = ({user}) => {\r\n  let [lang, setLang] = React.useState(user.lang.title);\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName={translate(\"drawer.main\", lang)}\r\n      drawerContent={(props) => <ContentDrawer {...props} />}\r\n    >\r\n      <Drawer.Screen name={translate(\"drawer.main\", lang)} component={Main} />\r\n      <Drawer.Screen\r\n        name={translate(\"drawer.reports\", lang)}\r\n        component={Reports}\r\n      />\r\n      <Drawer.Screen\r\n        name={translate(\"drawer.about_us\", lang)}\r\n        component={Aboutus}\r\n      />\r\n      <Drawer.Screen\r\n        name={translate(\"drawer.contact_us\", lang)}\r\n        component={ContactUs}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerNavigation);","import React from 'react'\r\n\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport { Datepicker, Text,Button } from \"@ui-kitten/components\";\r\nimport axios from 'axios'\r\nimport env from '../../constants/env'\r\nimport {connect} from 'react-redux'\r\nlet DataPicker = ({ user, setCodes, _change_codes }) => {\r\n  let [dateFrom, setDateFrom] = React.useState(new Date());\r\n  let [dateTo, setDateTo] = React.useState(new Date());\r\n\r\n  let search = () => {\r\n    let user_id = user.user.id;\r\n    axios\r\n      .post(env.server + \"api/report/searchWithDate\", {\r\n        dateFrom: dateFrom,\r\n        dateTo: dateTo,\r\n        user_id: user_id,\r\n      })\r\n      .then((res) => {\r\n        _change_codes(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <View style={{ padding: 15 }}>\r\n      <Text category=\"s1\">Search With Date</Text>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <Datepicker\r\n            label=\"From\"\r\n            date={dateFrom}\r\n            onSelect={(nextDate) => setDateFrom(nextDate)}\r\n          />\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          <Datepicker\r\n            label=\"To\"\r\n            date={dateTo}\r\n            onSelect={(nextDate) => setDateTo(nextDate)}\r\n          />\r\n        </View>\r\n      </View>\r\n      <Button onPress={search} size=\"small\">\r\n        Search\r\n      </Button>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    \r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DataPicker);","import React,{useState,useEffect} from 'react'\r\n/** Components */\r\nimport {View,ScrollView,TouchableOpacity} from 'react-native'\r\nimport {\r\n    Layout,\r\n    Text,\r\n    TopNavigation,\r\n    useTheme\r\n} from '@ui-kitten/components'\r\nimport {connect} from 'react-redux'\r\nimport {translate} from '../../translations'\r\nimport DataPicker from './DataPicker'\r\nimport {setSelectedCategories,setSelectedSubCategories,setCode,setOrder,setLastCategories} from '../../stores'\r\nlet OrderHistory = ({\r\n  user,\r\n  setCode,\r\n  setSelectedCategories,\r\n  setSelectedSubCategories,\r\n  navigation,\r\n  setOrder,\r\n  setLastCategories,\r\n}) => {\r\n  let theme = useTheme();\r\n  let [lang, setLang] = useState(user.lang.title);\r\n  let user_id = user.user.id;\r\n\r\n  let [codes, setCodes] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    setCodes(user.order_history);\r\n  },[]);\r\n\r\n  let _change_codes = (res) => {\r\n    setCodes(res);\r\n  }\r\n\r\n  let OrderCard = ({ data }) => {\r\n    if (data.code !== null) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            setOrder(data);\r\n            setCode(data.code.code);\r\n            setSelectedCategories(data.categories);\r\n            setSelectedSubCategories(data.sub_categories);\r\n            if (data.last_categories !== null) {\r\n              setLastCategories(data.last_categories);\r\n            }else {\r\n              setLastCategories({\r\n                title: \" \",\r\n                SubTitle: \" \",\r\n              });\r\n            }\r\n            navigation.navigate(\"Code\");\r\n          }}\r\n          style={{\r\n            marginHorizontal: 5,\r\n            marginVertical: 10,\r\n            borderTopLeftRadius: 5,\r\n            borderTopRightRadius: 5,\r\n            borderColor: \"#aaa\",\r\n            borderWidth: 1,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              backgroundColor: theme[\"color-primary-transparent-100\"],\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Text>{translate(\"order_history.data\", lang)}</Text>\r\n            <Text>{data.created_at.substring(0, 10)}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Text>{translate(\"order_history.code\", lang)}</Text>\r\n            <Text>{data.code.code}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Text>{translate(\"order_history.categories\", lang)}</Text>\r\n            <Text>{data.categories.title}</Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              padding: 10,\r\n            }}\r\n          >\r\n            <Text>{translate(\"order_history.type\", lang)}</Text>\r\n            <Text>\r\n              {data.sub_categories.title} - {data.sub_categories.SubTitle}\r\n            </Text>\r\n          </View>\r\n\r\n          {data.last_categories_id !== 0 && (\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                padding: 10,\r\n              }}\r\n            >\r\n              <Text>{translate(\"order_history.type\", lang)}</Text>\r\n              <Text>\r\n                {data.last_categories.title} - {data.last_categories.SubTitle}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <TopNavigation title={translate(\"order_history.order_history\", lang)} />\r\n      {codes.length == 0 && (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text style={{ color: theme[\"color-text-hint\"] }}>\r\n            {translate(\"order_history.no_codes\", lang)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <DataPicker setCodes={setCodes} _change_codes={_change_codes} />\r\n\r\n        {codes.map((trg, index) => (\r\n          <OrderCard data={trg} key={index} />\r\n        ))}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user:state.user\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      setCode: (item) => dispatch(setCode(item)),\r\n      setSelectedCategories: (item) => dispatch(setSelectedCategories(item)),\r\n      setSelectedSubCategories: (item) =>\r\n        dispatch(setSelectedSubCategories(item)),\r\n      setOrder: (item) => dispatch(setOrder(item)),\r\n      setLastCategories: (item) => dispatch(setLastCategories(item)),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory);","import React from 'react'\r\n/** Components */\r\nimport {View,Image,Dimensions,TouchableOpacity} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\nimport {env} from '../../../constants'\r\nexport default ({data,onPress}) => {\r\n    let height = Dimensions.get('screen').height\r\n    let card_height = height / 3.5;\r\n    let theme = useTheme()\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n        style={{\r\n          margin: 10,\r\n          borderColor: theme[\"color-primary-transparent-100\"],\r\n          borderWidth: 0.5,\r\n          borderRadius: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          source={{ uri: env.server + \"storage/\" + data.image }}\r\n          style={{ width: \"100%\", height: card_height, borderRadius: 10 }}\r\n          resizeMode=\"cover\"\r\n        />\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"rgba(0,50,255,0.5)\",\r\n              paddingVertical: 5,\r\n              borderBottomRightRadius: 10,\r\n              borderBottomLeftRadius: 10,\r\n              paddingHorizontal: 3,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: theme[\"text-alternate-color\"],\r\n                textAlign: \"center\",\r\n              }}\r\n              category=\"s1\"\r\n            >\r\n              {data.title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n}","import React,{useState} from 'react'\r\n/** Components */\r\nimport { View, TouchableOpacity,ScrollView} from 'react-native'\r\nimport { Layout, Text, TopNavigation,} from '@ui-kitten/components'\r\nimport {Card} from './components'\r\nimport {connect} from 'react-redux' \r\nimport { setSelectedCategories} from '../../stores'\r\nimport { translate } from \"../../translations\";\r\nconst Fav = ({ categories, user, setSelectedCategories,navigation}) => {\r\n    let [lang, setLang] = useState(user.lang.title); \r\n    let onPressCategory = (data) => {\r\n        setSelectedCategories(data);\r\n        navigation.navigate(\"CategoriesShow\");\r\n    };\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <TopNavigation title={translate(\"fav.title\", lang)} />\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          {user.fav.map((trg, index) => (\r\n            <Card key={index} data={trg} onPress={onPressCategory} />\r\n          ))}\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories:state.categories,\r\n        user:state.user\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategories: item => dispatch(setSelectedCategories(item))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Fav);","import React from 'react'\r\n/** Components */\r\nimport {View,Image} from 'react-native'\r\nimport {Text,useTheme} from '@ui-kitten/components'\r\nexport default ({title}) => {\r\n    let theme = useTheme()\r\n    return (\r\n        <View style={{position:'relative'}}>\r\n            <View style={{width:'100%',height:160}}>\r\n\r\n            </View>\r\n            <View style={{ position: 'absolute', left: 0, top: 0, height: 160, width: '100%', backgroundColor:'#42b4e6'}}>\r\n                <Text style={{position:'absolute',left:0,bottom:10,width:'100%',textAlign:'center',color:'white'}} category=\"h2\">{title}</Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}","import { Icon, Text,useTheme, } from '@ui-kitten/components';\r\nimport React from 'react'\r\nimport { View,TouchableOpacity } from 'react-native';\r\nimport {connect} from 'react-redux'\r\nlet ListItem = ({ icon, title, divider = false, leftIcon = true, size = 18, onPress,}) => {\r\n    let theme = useTheme()\r\n    return (\r\n      <TouchableOpacity onPress={() => {onPress()}} style={{ flexDirection: \"row\", padding: 15 }}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\", flex: 2 }}>\r\n          {icon && (\r\n            <Icon\r\n              name={icon}\r\n              fill={theme[\"text-hint-color\"]}\r\n              style={{ width: 24, height: 24 }}\r\n            />\r\n          )}\r\n          <Text\r\n            style={{\r\n              fontSize: size,\r\n              color: theme[\"text-hint-color\"],\r\n              marginHorizontal: 15,\r\n            }}\r\n          >\r\n            {title}\r\n          </Text>\r\n        </View>\r\n        <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          {leftIcon && (\r\n            <Icon\r\n              name={\"chevron-right-outline\"}\r\n              fill={theme[\"text-hint-color\"]}\r\n              style={{ width: 24, height: 24 }}\r\n            />\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settings: state.settings\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","import React,{useState} from 'react'\r\n/** Components */\r\n/** Components */\r\nimport { View, SafeAreaView, ScrollView } from 'react-native'\r\nimport { Layout, Text } from '@ui-kitten/components'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as Components from './Components'\r\nimport {translate} from '../../translations'\r\nconst Settings = ({user,navigation}) => {\r\n\r\n\r\n    let [lang, setLang] = useState(user.lang.title);\r\n\r\n    let sign_out = async () => {\r\n        try {\r\n            await AsyncStorage.removeItem('token')\r\n            navigation.navigate('Login')\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    let Auth = () => (\r\n      <>\r\n        <Components.ListItem\r\n          title={user.user.name}\r\n          onPress={() => {}}\r\n          icon=\"person-outline\"\r\n        />\r\n        <Components.ListItem\r\n          title={user.user.phone}\r\n          onPress={() => {}}\r\n          icon=\"phone-outline\"\r\n        />\r\n        <Components.ListItem\r\n          title={user.user.wallet.amount + \"JD\"}\r\n          onPress={() => {}}\r\n          icon=\"award-outline\"\r\n        />\r\n        <Components.ListItem\r\n          onPress={() => {\r\n            navigation.navigate(\"UpdateProfile\");\r\n          }}\r\n          title={translate(\"settings.update_profile\", lang)}\r\n          icon=\"person-done-outline\"\r\n        />\r\n        <Components.ListItem\r\n          onPress={() => {\r\n            sign_out();\r\n          }}\r\n          title={translate(\"settings.logout\", lang)}\r\n          icon=\"log-out-outline\"\r\n        />\r\n      </>\r\n    );\r\n    return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Components.Header title={translate(\"settings.settings\", lang)} />\r\n        <ScrollView\r\n          contentContainerStyle={{ padding: 30, paddingHorizontal: 15 }}\r\n        >\r\n          <Auth />\r\n          <View style={{ marginTop: 30 }}>\r\n            <Text category=\"h6\" style={{ marginBottom: 20, textAlign: \"left\" }}>\r\n              {translate(\"settings.general_settings\", lang)}\r\n            </Text>\r\n            <Components.ListItem\r\n              onPress={() => {\r\n                navigation.navigate(\"Language\");\r\n              }}\r\n              title={translate(\"settings.language\", lang)}\r\n              icon=\"globe-outline\"\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n      </Layout>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        Logout: () => dispatch(Logout()),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React from \"react\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nimport DrawerNavigation from './DrawerNavigation'\r\nimport { Ionicons, Feather } from \"@expo/vector-icons\";\r\nimport { useTheme } from \"@ui-kitten/components\";\r\n\r\n// Screens\r\nimport OrderHistory from '../containers/OrderHistory'\r\nimport Fav from '../containers/Fav'\r\nimport Settings from '../containers/Settings'\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function BottomTapNavigation(props) {\r\n  let theme = useTheme();\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === \"DrawerNavigation\") {\r\n            iconName = focused ? \"home\" : \"home\";\r\n          } else if (route.name === \"OrderHistory\") {\r\n            iconName = focused ? \"book-open\" : \"book\";\r\n          } else if (route.name === \"Fav\") {\r\n            iconName = focused ? \"heart\" : \"heart\";\r\n          } else if (route.name === \"Settings\") {\r\n            iconName = focused ? \"settings\" : \"settings\";\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return (\r\n            <View\r\n              style={{\r\n                borderBottomColor: color,\r\n                borderBottomWidth: focused ? 2 : 0,\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Feather name={iconName} size={size} color={color} />\r\n            </View>\r\n          );\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: '#42b4e6',\r\n        inactiveTintColor: \"gray\",\r\n        showLabel: false,\r\n      }}\r\n      initialRouteName={\"DrawerNavigation\"}\r\n    >\r\n      <Tab.Screen name=\"DrawerNavigation\" component={DrawerNavigation} />\r\n      <Tab.Screen name=\"OrderHistory\" component={OrderHistory} />\r\n      <Tab.Screen name=\"Fav\" component={Fav} />\r\n      <Tab.Screen name=\"Settings\" component={Settings} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import React from 'react'\r\n/** Components */\r\nimport {View,TouchableOpacity} from 'react-native'\r\nimport {useTheme,Text,Icon} from '@ui-kitten/components'\r\nexport default ({data,onPress,lang}) => {\r\n    let theme = useTheme()\r\n    return (\r\n      <TouchableOpacity\r\n        style={{\r\n          margin: 10,\r\n          padding: 15,\r\n          borderRadius: 5,\r\n          borderColor: theme[\"color-primary-transparent-400\"],\r\n          borderWidth: 1,\r\n          backgroundColor: theme[\"color-primary-transparent-100\"],\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems:'center'\r\n        }}\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n      >\r\n        <Text style={{ color: theme[\"text-basic-color\"], fontWeight: \"bold\" }}>\r\n          {data.title} - {data.SubTitle}\r\n        </Text>\r\n        <Icon\r\n          name={lang == 'en' ? 'arrow-ios-forward-outline':'arrow-ios-back-outline'} fill=\"black\" style={{width:24,height:24}}\r\n        />\r\n      </TouchableOpacity>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\n/** Components */\r\nimport { View, ScrollView,TouchableOpacity } from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport {\r\n  Layout,\r\n  TopNavigation,\r\n  Icon,\r\n  Text,\r\n  useTheme,\r\n  TopNavigationAction\r\n} from \"@ui-kitten/components\";\r\nimport {Card} from './components'\r\nimport { apis } from \"../../services\";\r\nimport { setCategories,setSelectedSubCategories,setLastCategories } from \"../../stores\";\r\nimport { connect } from \"react-redux\";\r\nimport {translate} from '../../translations'\r\nconst CategoriesShow = ({\r\n  categories,\r\n  setSelectedSubCategories,\r\n  navigation,\r\n  user,\r\n  setLastCategories,\r\n}) => {\r\n  let [lang, setLang] = useState(user.lang.title);\r\n  let [type, setType] = useState(0);\r\n  let [lastCategories, setLastCategoriesx] = useState([]);\r\n  // Statics\r\n  let theme = useTheme();\r\n  let fav_list = user.fav;\r\n  let [fav, setFav] = useState(false);\r\n\r\n  /** on Press Sub Categories */\r\n  let onPressSubCategories = (data) => {\r\n    // The Selected have to options\r\n    // Options1 : Normal without multi choise\r\n    // Options2 : With Select Other Options\r\n\r\n    if (data.multi == 0) {\r\n      setSelectedSubCategories(data);\r\n      setLastCategories(null)\r\n      navigation.navigate(\"Checkout\");\r\n    } else {\r\n      setType(1);\r\n      setSelectedSubCategories(data);\r\n      setLastCategoriesx(data.last_categories);\r\n    }\r\n  };\r\n\r\n  let onPressLastCategories = (data) => {\r\n    setLastCategories(data)\r\n    navigation.navigate(\"Checkout\");\r\n\r\n  };\r\n\r\n  let check_heart = () => {\r\n    // Check if the heart is on\r\n    fav_list.forEach((trg, index) => {\r\n      if (trg.id == categories.selected_category.id) {\r\n        setFav(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  let press_heart = async () => {\r\n    // Let Heart\r\n    if (!fav) {\r\n      let fav_storage = await AsyncStorage.getItem(\"fav\");\r\n      if (!fav_storage) {\r\n        let x = [];\r\n        x.push(categories.selected_category);\r\n        await AsyncStorage.setItem(\"fav\", JSON.stringify(x));\r\n      } else {\r\n        let x = JSON.parse(fav_storage);\r\n        x.push(categories.selected_category);\r\n        await AsyncStorage.setItem(\"fav\", JSON.stringify(x));\r\n      }\r\n      setFav(true);\r\n    } else {\r\n      let x = [];\r\n      fav_list.forEach((trg, index) => {\r\n        if (trg.id == categories.selected_category.id) {\r\n        } else {\r\n          x.push(trg);\r\n        }\r\n      });\r\n      await AsyncStorage.setItem(\"fav\", JSON.stringify(x));\r\n      setFav(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    check_heart();\r\n  }, []);\r\n\r\n  const LeftBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.goBack();\r\n      }}\r\n    >\r\n      <Icon\r\n        {...props}\r\n        fill=\"black\"\r\n        name={\r\n          lang == \"en\" ? \"arrow-ios-back-outline\" : \"arrow-ios-forward-outline\"\r\n        }\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n  const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n\r\n  const RightBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        press_heart();\r\n      }}\r\n    >\r\n      <Icon {...props} fill=\"pink\" name={fav ? \"heart\" : \"heart-outline\"} />\r\n    </TouchableOpacity>\r\n  );\r\n  const RightBtnAction = () => <TopNavigationAction icon={RightBtn} />;\r\n\r\n  /** Header */\r\n  let Header = () => (\r\n    <TopNavigation\r\n      accessoryLeft={LeftBtnAction}\r\n      accessoryRight={RightBtnAction}\r\n      title={translate(\"main.categories\", lang)}\r\n    />\r\n  );\r\n  /** End Header */\r\n\r\n  /** Return And render */\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Header />\r\n      {type == 0 && (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <View style={{ paddingVertical: 15, paddingHorizontal: 10 }}>\r\n            <Text style={{ color: theme[\"color-text-hint\"] }}>\r\n              {translate(\"main.select_type\", lang)}\r\n            </Text>\r\n          </View>\r\n          {categories.selected_category.sub_categories.map((trg, index) => (\r\n            <Card\r\n              lang={lang}\r\n              key={index}\r\n              data={trg}\r\n              onPress={onPressSubCategories}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n\r\n      {type == 1 && (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <View style={{ paddingVertical: 15, paddingHorizontal: 10 }}>\r\n            <Text style={{ color: theme[\"color-text-hint\"] }}>\r\n              {translate(\"main.select_type\", lang)}\r\n            </Text>\r\n          </View>\r\n          {lastCategories.map((trg, index) => (\r\n            <Card\r\n              lang={lang}\r\n              key={index}\r\n              data={trg}\r\n              onPress={onPressLastCategories}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      categories:state.categories,\r\n      user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCategoriesGlobal: (item) => dispatch(setCategories(item)),\r\n    setSelectedSubCategories: (item) =>\r\n      dispatch(setSelectedSubCategories(item)),\r\n    setLastCategories: (item) => dispatch(setLastCategories(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesShow);\r\n","import React from 'react'\r\n/** Components */\r\nimport {View} from 'react-native'\r\nimport {Spinner,useTheme,Text} from '@ui-kitten/components'\r\nexport default ({title}) => {\r\n    let theme = useTheme()\r\n    return (\r\n        <View style={{position:'absolute',zIndex:109,backgroundColor:'rgba(0,0,0,0.04)',left:0,top:0,width:'100%',height:'100%',justifyContent:'center',alignItems:'center'}}>\r\n            <Spinner status={'success'}></Spinner>\r\n            {title &&\r\n                <Text style={{ color: theme['text-success-color'], paddingTop: 3 }}>{title}</Text>\r\n            }\r\n        </View>\r\n    )\r\n}","import React from 'react'\r\n/** Components */\r\nimport {View,} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\nexport default ({status,title}) => {\r\n    let theme = useTheme()\r\n    let _get_color = () => {\r\n        switch (status) {\r\n            case 'success':\r\n                return {\r\n                  color: \"color-success-300\",\r\n                  nextColor: \"color-success-500\",\r\n                };\r\n            case 'danger':\r\n                return {\r\n                  color: \"color-danger-300\",\r\n                  nextColor: \"color-danger-500\",\r\n                };\r\n            default:\r\n                return {\r\n                  color: \"color-success-300\",\r\n                  nextColor: \"color-success-500\",\r\n                };\r\n        }\r\n    }\r\n    return (\r\n      <View\r\n        style={{\r\n          paddingHorizontal: 10,\r\n          paddingVertical: 10,\r\n          backgroundColor: theme[_get_color().color],\r\n          borderLeftColor: theme[_get_color().nextColor],\r\n          borderLeftWidth: 5,\r\n          borderTopLeftRadius: 2,\r\n          borderBottomLeftRadius: 2,\r\n          borderTopRightRadius: 5,\r\n          borderBottomRightRadius: 5,\r\n          marginBottom: 5,\r\n        }}\r\n      >\r\n        <Text style={{ color: \"white\" }} category=\"s2\">\r\n          {title}\r\n        </Text>\r\n      </View>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\n/** Components */\r\nimport { View, ScrollView,Image,Dimensions,TouchableOpacity } from \"react-native\";\r\nimport {\r\n  Layout,\r\n  TopNavigation,\r\n  Icon,\r\n  Text,\r\n  useTheme,\r\n  Button,\r\n  TopNavigationAction\r\n} from \"@ui-kitten/components\";\r\nimport {env} from '../../constants'\r\nimport {apis} from '../../services'\r\nimport {AlertBox,Loader} from '../../components'\r\nimport {setCode,setOrder,setLastCategories} from '../../stores'\r\nimport { connect } from \"react-redux\";\r\nimport {translate} from '../../translations'\r\nconst Checkout = ({\r\n  categories,\r\n  setSelectedSubCategories,\r\n  navigation,\r\n  user,\r\n  setCode,\r\n  setOrder,\r\n  setLastCategories,\r\n}) => {\r\n  // Statics\r\n  let theme = useTheme();\r\n  let height = Dimensions.get(\"window\").height;\r\n  let [lang, setLang] = useState(user.lang.title);\r\n  let [qty, setQty] = useState(1);\r\n  let [error, setError] = useState(null);\r\n  let [load,setLoad] = useState(false)\r\n\r\n  let store = () => {\r\n    setError(false);\r\n    setLoad(true);\r\n\r\n    let amount = 0;\r\n    let has_last = false;\r\n    let last_categories_id = 0;\r\n    if (categories.selected_last_categories == null) {\r\n      amount = categories.selected_sub_category.amount;\r\n      has_last = false;\r\n      last_categories_id = 0;\r\n    } else {\r\n      amount = categories.selected_last_categories.amount;\r\n      has_last = true;\r\n      last_categories_id = categories.selected_last_categories.id;\r\n    }\r\n    //Payload\r\n    let payload = {\r\n      categories_id: categories.selected_category.id,\r\n      sub_categories_id: categories.selected_sub_category.id,\r\n      user_id: user.user.id,\r\n      amount: amount,\r\n      has_last: has_last,\r\n      last_categories_id,\r\n    };\r\n    apis.order.store(\r\n      payload,\r\n      (res) => {\r\n        setLoad(false)\r\n        // Switch the Methods\r\n        let status = res.status;\r\n        switch (status) {\r\n          case 0:\r\n            setError(translate(\"checkout.no_code\", lang));\r\n            break;\r\n          case 1:\r\n            //Success\r\n            /**\r\n             * First Set the Code\r\n             */\r\n            setCode(res.code);\r\n            setOrder(res.order);\r\n            if (res.order.last_categories !== null) {\r\n              setLastCategories(res.order.last_categories);\r\n            } else {\r\n              setLastCategories({\r\n                title: \" \",\r\n                SubTitle: \" \",\r\n              });\r\n            }\r\n            navigation.navigate(\"Code\");\r\n            break;\r\n          case 2:\r\n            setError(translate(\"checkout.no_amount\", lang));\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        setLoad(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  const LeftBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.goBack();\r\n      }}\r\n    >\r\n      <Icon\r\n        {...props}\r\n        fill=\"black\"\r\n        name={\r\n          lang == \"en\" ? \"arrow-ios-back-outline\" : \"arrow-ios-forward-outline\"\r\n        }\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n  const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n  /** Header */\r\n  let Header = () => (\r\n    <TopNavigation\r\n      accessoryLeft={LeftBtnAction}\r\n      style={{ backgroundColor: \"transparent\" }}\r\n      title={translate(\"checkout.checkout\", lang)}\r\n    />\r\n  );\r\n  /** End Header */\r\n\r\n  /** Return And render */\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <View style={{ position: \"relative\" }}>\r\n        <Image\r\n          source={{\r\n            uri: env.server + \"storage/\" + categories.selected_category.image,\r\n          }}\r\n          style={{ width: \"100%\", height: height / 3 }}\r\n        />\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            zIndex: 103,\r\n          }}\r\n        >\r\n          <Header />\r\n        </View>\r\n      </View>\r\n      <ScrollView\r\n        showsVerticalScrollIndicator={false}\r\n        contentContainerStyle={{ position: \"relative\", flex: 1 }}\r\n      >\r\n        <View\r\n          style={{\r\n            width: \"100%\",\r\n            padding: 10,\r\n            borderBottomColor: theme[\"text-hint-color\"],\r\n            borderBottomWidth: 1,\r\n          }}\r\n        >\r\n          <Text category=\"s1\" style={{ textAlign: \"center\" }}>\r\n            {categories.selected_sub_category.title}{\" \"}\r\n            {categories.selected_sub_category.SubTitle}\r\n          </Text>\r\n        </View>\r\n        <View style={{ padding: 15 }}>\r\n          <Text category=\"s2\">\r\n            {categories.selected_sub_category.description}\r\n          </Text>\r\n        </View>\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            bottom: 0,\r\n            width: \"100%\",\r\n            paddingTop: 30,\r\n            marginTop: 30,\r\n            backgroundColor: theme[\"color-primary-transparent-100\"],\r\n            borderTopRightRadius: 15,\r\n            borderTopLeftRadius: 15,\r\n          }}\r\n        >\r\n          <Text style={{ textAlign: \"center\" }} category=\"h5\">\r\n            {translate(\"checkout.buy\", lang)}\r\n          </Text>\r\n          <View\r\n            style={{\r\n              paddingTop: 40,\r\n              paddingHorizontal: 15,\r\n              flexDirection: \"row\",\r\n            }}\r\n          >\r\n            <Text>{translate(\"checkout.brand\", lang)} </Text>\r\n            <Text category=\"s1\">\r\n              {categories.selected_sub_category.title}{\" \"}\r\n              {categories.selected_sub_category.SubTitle}\r\n            </Text>\r\n          </View>\r\n          {categories.selected_sub_category.multi == 1 && (\r\n            <View\r\n              style={{\r\n                paddingTop: 5,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"code.type\", lang)} </Text>\r\n              <Text category=\"s1\">\r\n                {categories.selected_last_categories.title}{\" \"}\r\n                {categories.selected_last_categories.SubTitle}\r\n              </Text>\r\n            </View>\r\n          )}\r\n          {categories.selected_last_categories == null ? (\r\n            <View\r\n              style={{\r\n                paddingTop: 5,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"checkout.price\", lang)} </Text>\r\n              <Text category=\"s1\">\r\n                {categories.selected_sub_category.amount}JD\r\n              </Text>\r\n            </View>\r\n          ) : (\r\n            <View\r\n              style={{\r\n                paddingTop: 5,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"checkout.price\", lang)} </Text>\r\n              <Text category=\"s1\">\r\n                {categories.selected_last_categories.amount}JD\r\n              </Text>\r\n            </View>\r\n          )}\r\n          <View\r\n            style={{\r\n              paddingTop: 5,\r\n              paddingHorizontal: 15,\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Text>{translate(\"checkout.qty\", lang)} </Text>\r\n            <View\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <View style={{ paddingHorizontal: 7 }}>\r\n                <Text category=\"s1\" style={{ fontSize: 18 }}>\r\n                  {qty}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View style={{ paddingTop: 30 }}></View>\r\n          {error && <AlertBox status=\"danger\" title={error} />}\r\n          <Button\r\n            onPress={() => {\r\n              store();\r\n            }}\r\n            style={{ backgroundColor: \"black\" }}\r\n            status=\"basic\"\r\n          >\r\n            {(evaProps) => (\r\n              <Text {...evaProps} style={{ color: \"white\" }}>\r\n                {translate(\"checkout.confirm\", lang)}\r\n              </Text>\r\n            )}\r\n          </Button>\r\n        </View>\r\n      </ScrollView>\r\n      {load &&\r\n        <Loader />\r\n      }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.categories,\r\n    user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCode: (item) => dispatch(setCode(item)),\r\n    setOrder: (item) => dispatch(setOrder(item)),\r\n    setLastCategories: (item) => dispatch(setLastCategories(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","import React, { useState, useEffect } from \"react\";\r\n/** Components */\r\nimport { View, ScrollView, TouchableOpacity, Clipboard } from \"react-native\";\r\nimport {\r\n  Layout,\r\n  TopNavigation,\r\n  Icon,\r\n  Text,\r\n  useTheme,\r\n  Button,\r\n} from \"@ui-kitten/components\";\r\nimport { setCategories, setSelectedSubCategories } from \"../../stores\";\r\nimport { translate } from \"../../translations\";\r\nimport { connect } from \"react-redux\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nconst CategoriesShow = ({ categories, navigation, user }) => {\r\n  // Statics\r\n  let theme = useTheme();\r\n  let [lang, setLang] = useState(user.lang.title);\r\n  let copy = () => {\r\n    Clipboard.setString(categories.code);\r\n  };\r\n  /** Return And render */\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <LinearGradient\r\n        colors={[\"#A6C1FF\", \"#D9E4FF\", \"#D9E4FF\"]}\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n        }}\r\n      >\r\n        <View style={{ width: \"100%\", paddingHorizontal: 10 }}>\r\n          <View\r\n            style={{\r\n              borderColor: theme[\"color-primary-transparent-200\"],\r\n              borderWidth: 1,\r\n              padding: 20,\r\n              paddingVertical: 30,\r\n              borderRadius: 5,\r\n              backgroundColor: theme[\"color-primary-transparent-100\"],\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                color: theme[\"color-success-200\"],\r\n                fontSize: 18,\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              {translate(\"code.you_get\", lang)}\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                copy();\r\n              }}\r\n              style={{\r\n                marginTop: 15,\r\n                marginHorizontal: 5,\r\n                paddingVertical: 15,\r\n                backgroundColor: theme[\"color-success-500\"],\r\n                borderRadius: 5,\r\n              }}\r\n            >\r\n              <Text\r\n                category=\"h4\"\r\n                style={{ color: \"white\", textAlign: \"center\" }}\r\n              >\r\n                {categories.code}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <Text style={{ textAlign: \"center\" }} category=\"s2\">\r\n              {translate(\"code.press_to_copy\", lang)}\r\n            </Text>\r\n            <View\r\n              style={{\r\n                paddingTop: 30,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"code.brand\", lang)} </Text>\r\n              <Text category=\"s1\">{categories.selected_category.title}</Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                paddingTop: 5,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"code.type\", lang)} </Text>\r\n              <Text category=\"s1\">\r\n                {categories.selected_sub_category.title} -{\" \"}\r\n                {categories.selected_sub_category.SubTitle}\r\n              </Text>\r\n            </View>\r\n            <View\r\n              style={{\r\n                paddingTop: 5,\r\n                paddingHorizontal: 15,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text>{translate(\"code.qty\", lang)} </Text>\r\n              <Text category=\"s1\">1</Text>\r\n            </View>\r\n            <View style={{ paddingTop: 15 }}>\r\n              <Text style={{ textAlign: \"center\" }}>\r\n                {translate(\"code.thank_message\", lang)}\r\n              </Text>\r\n            </View>\r\n            <Text category=\"s2\" style={{textAlign:'center'}}>{categories.order.created_at}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={{ width: \"100%\", paddingHorizontal: 10, paddingTop: 20 }}>\r\n          <Button>{translate(\"code.share\", lang)}</Button>\r\n          <View style={{ height: 5 }}></View>\r\n          <Button\r\n            status=\"basic\"\r\n            onPress={() => {\r\n              navigation.navigate(\"BottomNavNavigation\");\r\n            }}\r\n          >\r\n            {translate(\"code.back_to_home\", lang)}\r\n          </Button>\r\n        </View>\r\n      </LinearGradient>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    categories: state.categories,\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesShow);\r\n","import React from 'react'\r\n/** Components */\r\nimport {View,Image,Dimensions,TouchableOpacity} from 'react-native'\r\nimport {useTheme,Text} from '@ui-kitten/components'\r\nimport {env} from '../../../constants'\r\nexport default ({data,onPress}) => {\r\n    let height = Dimensions.get('screen').height\r\n    let card_height = height / 4;\r\n    let theme = useTheme()\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n        style={{\r\n          margin: 10,\r\n          borderColor: theme[\"color-primary-transparent-100\"],\r\n          borderWidth: 0.5,\r\n          borderRadius: 10,\r\n        }}\r\n      >\r\n        <Image\r\n          source={{ uri: env.server + \"storage/\" + data.image }}\r\n          style={{ width: \"100%\", height: card_height, borderRadius: 10 }}\r\n          resizeMode=\"cover\"\r\n        />\r\n        <View\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"rgba(255,255,255,0.1)\",\r\n              paddingVertical: 5,\r\n              borderBottomRightRadius: 10,\r\n              paddingHorizontal: 3,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: theme[\"text-alternate-color\"],\r\n                textAlign: \"center\",\r\n              }}\r\n              category=\"s1\"\r\n            >\r\n              {data.title}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n}","import React from 'react'\r\n/** Components */\r\nimport { View, TouchableOpacity, ScrollView } from \"react-native\";\r\nimport { Layout, Text, TopNavigation,Input,Icon,useTheme,TopNavigationAction } from '@ui-kitten/components'\r\nimport { connect } from 'react-redux'\r\nimport {apis} from '../../services'\r\nimport {translate} from '../../translations'\r\nimport { Card } from './components'\r\nimport {setSelectedCategories} from '../../stores'\r\nconst Search = ({ navigation, setSelectedCategories, user }) => {\r\n  let [searchInput, setSearchInput] = React.useState(\"\");\r\n  let [categories, setCategories] = React.useState([]);\r\n  let [lang, setLang] = React.useState(user.lang.title);\r\n  let theme = useTheme();\r\n  let [once, setOnce] = React.useState(false);\r\n  let onChangeText = (Text) => {\r\n    setSearchInput(Text);\r\n    setOnce(true);\r\n    // Search Methods\r\n    apis.search.index(\r\n      Text,\r\n      (res) => {\r\n        setCategories(res);\r\n      },\r\n      (err) => {\r\n        console.log(err.response);\r\n      }\r\n    );\r\n  };\r\n  const renderIcon = (props) => <Icon {...props} name={\"search\"} />;\r\n\r\n  let onPressCategory = (data) => {\r\n    setSelectedCategories(data);\r\n    navigation.navigate(\"CategoriesShow\");\r\n  };\r\n\r\n  const LeftBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.goBack();\r\n      }}\r\n    >\r\n      <Icon\r\n        {...props}\r\n        fill=\"black\"\r\n        name={\r\n          lang == \"en\" ? \"arrow-ios-back-outline\" : \"arrow-ios-forward-outline\"\r\n        }\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n  const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n  /** Header */\r\n  let Header = () => (\r\n    <TopNavigation\r\n      accessoryLeft={LeftBtnAction}\r\n      style={{ backgroundColor: \"transparent\" }}\r\n      title={translate('search.title',lang)}\r\n    />\r\n  );\r\n  /** End Header */\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Header />\r\n      <View style={{ paddingHorizontal: 15 }}>\r\n        <Input\r\n          value={searchInput}\r\n          placeholder={translate(\"search.search_for_cards\", lang)}\r\n          accessoryRight={renderIcon}\r\n          onChangeText={(nextValue) => onChangeText(nextValue)}\r\n        />\r\n      </View>\r\n      {!once && (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            alignContent: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            category=\"s1\"\r\n            style={{ color: theme[\"text-hint-color\"], textAlign: \"center\" }}\r\n          >\r\n            {translate(\"search.search_for_result\", lang)}\r\n          </Text>\r\n        </View>\r\n      )}\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        {categories.map((trg, index) => (\r\n          <Card key={index} data={trg} onPress={onPressCategory} />\r\n        ))}\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.categories,\r\n        user:state.user\r\n    };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setSelectedCategories: item => dispatch(setSelectedCategories(item))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React from \"react\";\r\n/** Components */\r\nimport { View, TouchableOpacity,ScrollView } from \"react-native\";\r\nimport {\r\n  Layout,\r\n  Text,\r\n  useTheme,\r\n  TopNavigation,\r\n  Icon,\r\n  TopNavigationAction,\r\n  Button,\r\n  Input,\r\n} from \"@ui-kitten/components\";\r\nimport AlertBox from '../../components/AlertBox'\r\nimport {connect} from 'react-redux'\r\nimport apis from \"../../services/apis\";\r\nlet UpdateProfile = ({ user,navigation }) => {\r\n  let theme = useTheme();\r\n  let _user = user.user;\r\n\r\n\r\n  const LeftBtn = (props) => (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        navigation.goBack();\r\n      }}\r\n    >\r\n      <Icon {...props} fill=\"black\" name={\"arrow-ios-back-outline\"} />\r\n    </TouchableOpacity>\r\n  );\r\n  const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n  /** Header */\r\n  let Header = () => (\r\n    <TopNavigation accessoryLeft={LeftBtnAction} title={\"Update Password \"} />\r\n  );\r\n\r\n  let [data, setData] = React.useState({\r\n    oldPassword:'',\r\n    newPassword:''\r\n  });\r\n  let [error,setError] = React.useState(false)\r\n  let save = () => {\r\n    let id = _user.id\r\n    let _data = {...data,id:id}\r\n    apis.auth.update(_data,(res) => {\r\n      alert('update success')\r\n      navigation.goBack()\r\n    },(err) => {\r\n      setError(true)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <Header />\r\n      <ScrollView contentContainerStyle={{ padding: 30 }}>\r\n        <Text category=\"s1\" style={{ color: theme[\"color-primary-300\"] }}>\r\n          Update password\r\n        </Text>\r\n        <Input\r\n          placeholder={\"Old Password\"}\r\n          value={data.oldPassword}\r\n          onChangeText={(nextValue) =>\r\n            setData({ ...data, oldPassword: nextValue })\r\n          }\r\n        />\r\n        <View style={{ height: 10 }}></View>\r\n        <Input\r\n          placeholder={\"NewPassword\"}\r\n          value={data.newPassword}\r\n          secureTextEntry={true}\r\n          onChangeText={(nextValue) =>\r\n            setData({ ...data, newPassword: nextValue })\r\n          }\r\n        />\r\n        <View style={{ height: 10 }}></View>\r\n        {error && (\r\n          <AlertBox status=\"danger\" title=\"There Are error in the password\" />\r\n        )}\r\n        <Button\r\n          status={\"success\"}\r\n          onPress={() => {\r\n            save();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateProfile);","import React, { useState, useEffect } from \"react\";\r\nimport { View, SafeAreaView, TouchableOpacity } from \"react-native\";\r\nimport {\r\n  useTheme,\r\n  Layout,\r\n  Text,\r\n  CheckBox,\r\n  TopNavigation,\r\n  Icon,\r\n  TopNavigationAction,\r\n} from \"@ui-kitten/components\";\r\nimport { translate, changeLanguage } from '../../translations'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default ({ navigation }) => {\r\n  let [lang, setLang] = useState();\r\n  // Set Language\r\n  let setup_lang = async () => {\r\n    const locale = await AsyncStorage.getItem(\"locale\");\r\n    if (!locale) {\r\n      setLang(\"en\");\r\n      set_locale(\"en\");\r\n    } else {\r\n      if (locale == \"en\") {\r\n        setLang(\"en\");\r\n        set_locale(\"en\");\r\n      } else if (locale == \"ar\") {\r\n        setLang(\"ar\");\r\n        set_locale(\"ar\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setup_lang();\r\n  }, []);\r\n  let [languages] = useState([\r\n    { title: \"English\", lang: \"en\", isRtl: false },\r\n    { title: \"Arabic\", lang: \"ar\", isRtl: true },\r\n  ]);\r\n  let [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  let press_lang = (data, index) => {\r\n    setSelectedIndex(index);\r\n    changeLanguage(data.lang, data.isRtl);\r\n  };\r\n\r\n  let set_locale = (locale) => {\r\n    languages.forEach((trg, index) => {\r\n      if (locale == trg.lang) {\r\n        setSelectedIndex(index);\r\n      }\r\n    });\r\n  };\r\n\r\n   const LeftBtn = (props) => (\r\n     <TouchableOpacity\r\n       onPress={() => {\r\n         navigation.goBack();\r\n       }}\r\n     >\r\n       <Icon {...props} fill=\"black\" name={\"arrow-ios-back-outline\"} />\r\n     </TouchableOpacity>\r\n   );\r\n   const LeftBtnAction = () => <TopNavigationAction icon={LeftBtn} />;\r\n   /** Header */\r\n   let Header = () => (\r\n     <TopNavigation accessoryLeft={LeftBtnAction} title={\"Language\"} />\r\n   );\r\n  return (\r\n      <Layout style={{ flex: 1 }}>\r\n        <Header />\r\n        <View style={{ paddingVertical: 15, paddingHorizontal: 20 }}>\r\n          {languages.map((trg, index) => (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                press_lang(trg, index);\r\n              }}\r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                padding: 15,\r\n              }}\r\n              key={index}\r\n            >\r\n              <CheckBox\r\n                status={\"success\"}\r\n                checked={selectedIndex == index ? true : false}\r\n              ></CheckBox>\r\n              <Text category=\"s1\" style={{ marginHorizontal: 10 }}>\r\n                {trg.title}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </Layout>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\n/** Components */\r\nimport { Easing } from \"react-native\";\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\n\r\nimport BottomNavNavigation from './BottomNavNavigation'\r\nimport CategoriesShow from '../containers/CategoriesShow'\r\nimport Checkout from '../containers/Checkout'\r\nimport Code from '../containers/Code'\r\nimport Search from '../containers/Search'\r\nimport UpdateProfile from '../containers/UpdateProfile'\r\nimport Language from '../containers/Language'\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n/** Config Navigation Animation */\r\nconst config = {\r\n  animation: \"spring\",\r\n  config: {\r\n    stiffness: 1000,\r\n    damping: 300,\r\n    mass: 3,\r\n    overshootClamping: false,\r\n    restDisplacementThreshold: 0.01,\r\n    restSpeedThreshold: 0.01,\r\n  },\r\n};\r\nconst closeConfig = {\r\n  animation: \"timing\",\r\n  config: {\r\n    duration: 100,\r\n    easing: Easing.linear,\r\n  },\r\n};\r\n\r\n/** Render() */\r\nexport default function MainNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        gestureEnabled: true,\r\n        gestureDirection: \"horizontal\",\r\n        cardStyleInterpolator: CardStyleInterpolators.forFadeFromBottomAndroid,\r\n        transitionSpec: {\r\n          open: config,\r\n          close: closeConfig,\r\n        },\r\n      }}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"BottomNavNavigation\"}\r\n    >\r\n      <Stack.Screen\r\n        name=\"BottomNavNavigation\"\r\n        component={BottomNavNavigation}\r\n      />\r\n      <Stack.Screen name=\"CategoriesShow\" component={CategoriesShow} />\r\n      <Stack.Screen name=\"Checkout\" component={Checkout} />\r\n      <Stack.Screen name=\"Code\" component={Code} />\r\n      <Stack.Screen name=\"Search\" component={Search} />\r\n      <Stack.Screen name=\"UpdateProfile\" component={UpdateProfile} />\r\n      <Stack.Screen name=\"Language\" component={Language} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React,{useState} from 'react'\r\n/** Components */\r\nimport {View,Image,ImageBackground} from 'react-native'\r\nimport { Layout, Text, useTheme, Input,Button } from \"@ui-kitten/components\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nimport {AlertBox, Loader} from '../../../components'\r\nimport {apis} from '../../../services'\r\nimport { connect } from \"react-redux\";\r\nimport {setUser} from '../../../stores'\r\nconst Login = ({ navigation, setUserGlobal }) => {\r\n  let [user, setUser] = useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n  });\r\n  let [loader, setLoader] = useState(false);\r\n  let [error, setError] = useState(null);\r\n  let [success, setSuccess] = useState(null);\r\n\r\n  let login = () => {\r\n    setLoader(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    apis.auth.login(\r\n      user,\r\n      async (res) => {\r\n        let token = res.token;\r\n        let user = res.user;\r\n        setUserGlobal(user);\r\n        try {\r\n          await AsyncStorage.setItem(\"token\", token);\r\n        } catch (error) {}\r\n        setSuccess(\"Login Success\");\r\n        setLoader(false);\r\n        setTimeout(() => {\r\n          navigation.navigate(\"MainNavigation\");\r\n        }, 1000);\r\n      },\r\n      (err) => {\r\n        setLoader(false);\r\n        setError(\"There are error in the Phone/Password\");\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../../../assets/Auth/background.jpg\")}\r\n      style={{ flex: 1 }}\r\n    >\r\n      <Layout\r\n        style={{\r\n          flex: 1,\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"transparent\",\r\n        }}\r\n      >\r\n        {loader && <Loader />}\r\n        <Image\r\n          source={require(\"../../../assets/logo.png\")}\r\n          style={{ width: \"100%\", height: 98 }}\r\n          resizeMode=\"contain\"\r\n        />\r\n        <View style={{ paddingTop: 75, width: \"100%\", paddingHorizontal: 30 }}>\r\n          <Input\r\n            placeholder=\"Mobile Number\"\r\n            value={user.phone}\r\n            onChangeText={(nextValue) => setUser({ ...user, phone: nextValue })}\r\n          />\r\n          <View style={{ height: 10 }}></View>\r\n          <Input\r\n            placeholder=\"Password\"\r\n            value={user.password}\r\n            onChangeText={(nextValue) =>\r\n              setUser({ ...user, password: nextValue })\r\n            }\r\n            secureTextEntry={true}\r\n          />\r\n          {error && <AlertBox status=\"danger\" title={error} />}\r\n          {success && <AlertBox status=\"success\" title={success} />}\r\n          <View style={{ height: 50 }}></View>\r\n\r\n          <Button\r\n            onPress={() => {\r\n              login();\r\n            }}\r\n            status=\"basic\"\r\n            style={{ borderRadius: 30 }}\r\n          >\r\n            SIGN IN\r\n          </Button>\r\n        </View>\r\n        <View\r\n          style={{ position: \"absolute\", bottom: 20, left: 0, width: \"100%\" }}\r\n        >\r\n          <Text category=\"s2\" style={{ textAlign: \"center\", color: \"white\" }}>\r\n            Don't have account ? Contact us\r\n          </Text>\r\n        </View>\r\n      </Layout>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user:state.user\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUserGlobal: (item) => dispatch(setUser(item)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import CategoriesType from './CategoriesType'\n\nconst intintalState = {\n  categories_list: [],\n  selected_category: {},\n  selected_sub_category: {},\n  code: \"\",\n  selected_last_categories: null,\n  order: { title: \" \", SubTitle :\" \"},\n};\n\n\nconst reducer = (state = intintalState,action) => {\n    switch (action.type) {\n      case CategoriesType.SET_CATEGORIES:\n        return { ...state, categories_list: action.payload };\n      case CategoriesType.SET_SELECTED_CATEGORIES:\n        return { ...state, selected_category: action.payload };\n      case CategoriesType.SET_SELECTED_SUB_CATEGORIES:\n        return { ...state, selected_sub_category: action.payload };\n      case CategoriesType.SET_CODE:\n        return { ...state, code: action.payload };\n      case CategoriesType.SET_LAST_CATEGORIES:\n        return { ...state, selected_last_categories: action.payload };\n      case CategoriesType.SET_ORDER:\n        return { ...state, order: action.payload };\n      default:\n        return state;\n    }\n}\n\nexport default reducer","import UserTypes from './UserTypes'\n\nconst intintalState = {\n    user:[],\n    order_history:[],\n    fav:[],\n    lang:{\n        title:'en',\n        rtl:false\n    }\n}\n\n\nconst reducer = (state = intintalState,action) => {\n    switch (action.type) {\n        case UserTypes.SET_USER:\n            return { ...state, user: action.payload };\n        case UserTypes.SET_ORDER_HISTORY:\n            return {...state,order_history:action.payload}\n        case UserTypes.SET_FAV:\n            return {...state,fav:action.payload}\n        case UserTypes.SET_LANG:\n            return {...state,lang:action.payload}\n        default:\n            return state\n    }\n}\n\nexport default reducer","import {combineReducers} from 'redux'\nimport CategoriesReducers from './Categories/CategoriesReducers'\nimport UserReducers from './User/UserReducers'\nconst rootReducer = combineReducers({\n  categories: CategoriesReducers,\n  user:UserReducers\n \n});\n\nexport default rootReducer;","import {createStore} from 'redux'\nimport rootReducer from './rootReducer'\n\n\nconst store = createStore(rootReducer)\n\nexport default store;","/**\r\n * Root:\r\n * #The main bootstrap for the app\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/** Components */\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport {\r\n  Platform,\r\n  StatusBar,\r\n  StyleSheet,\r\n  Easing,\r\n} from \"react-native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n/**\r\n * Fonts\r\n * Import Font from expo\r\n * import fonts\r\n */\r\nimport * as Font from \"expo-font\";\r\n\r\n/** Ui-Kitten Display */\r\nimport * as eva from \"@eva-design/eva\"; //Design System\r\nimport { ApplicationProvider, IconRegistry } from \"@ui-kitten/components\"; // UI Application Provider\r\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\"; // Icons Pack\r\n\r\n/** Navigation */\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport {\r\n  createStackNavigator,\r\n  CardStyleInterpolators,\r\n} from \"@react-navigation/stack\";\r\n\r\n/** Screens */\r\nimport MainNavigation from \"./navigation/MainNavigation\";\r\nimport Login from './containers/Auth/Login'\r\n/** translate navigation   */\r\nimport { setI18nConfig, SetFirstTime } from \"./translations\";\r\n/** Create Stack */\r\nconst Stack = createStackNavigator();\r\n\r\n/** Stores */\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./stores/store\";\r\n\r\n/** Animation */\r\nconst config = {\r\n  animation: \"spring\",\r\n  config: {\r\n    stiffness: 1000,\r\n    damping: 300,\r\n    mass: 3,\r\n    overshootClamping: false,\r\n    restDisplacementThreshold: 0.01,\r\n    restSpeedThreshold: 0.01,\r\n  },\r\n};\r\nconst closeConfig = {\r\n  animation: \"timing\",\r\n  config: {\r\n    duration: 100,\r\n    easing: Easing.linear,\r\n  },\r\n};\r\n\r\n\r\n\r\n/** Render() */\r\nexport default function App(props) {\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n  const [screen,setScreen] = React.useState('Login')\r\n  // Load any resources or data that we need prior to rendering the app\r\n  React.useEffect(() => {\r\n    async function loadResourcesAndDataAsync() {\r\n      try {\r\n        SplashScreen.preventAutoHideAsync();\r\n\r\n        // Load fonts\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          \"space-mono\": require(\"../assets/fonts/SpaceMono-Regular.ttf\"),\r\n        });\r\n        \r\n        /* Load Locale and translation from storage  */\r\n        const locale = await AsyncStorage.getItem(\"locale\");\r\n        // Check If the first time is load\r\n        if (!locale) {\r\n          // Set it to english if the first time\r\n          SetFirstTime(\"en\", false);\r\n        } else {\r\n          if (locale == \"en\") {\r\n            SetFirstTime(\"en\", false);\r\n          } else if (locale == \"ar\") {\r\n            setI18nConfig(\"ar\", true);\r\n          }\r\n        }\r\n\r\n\r\n        /** Token */\r\n        let token = await AsyncStorage.getItem('token');\r\n        if(!token) { \r\n          setScreen(\"Login\");\r\n        }else {\r\n          setScreen(\"MainNavigation\");\r\n        }\r\n\r\n      } catch (e) {\r\n        // We might want to provide this error information to an error reporting service\r\n        console.warn(e);\r\n      } finally {\r\n        setLoadingComplete(true);\r\n        SplashScreen.hideAsync();\r\n      }\r\n    }\r\n\r\n    loadResourcesAndDataAsync();\r\n  }, []);\r\n\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <Provider store={store} style={styles.container}>\r\n        <IconRegistry icons={EvaIconsPack} />\r\n        <ApplicationProvider {...eva} theme={eva.light}>\r\n          {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\r\n          <NavigationContainer>\r\n            <Stack.Navigator\r\n              screenOptions={{\r\n                headerShown: false,\r\n                gestureEnabled: false,\r\n                gestureDirection: \"horizontal\",\r\n                cardStyleInterpolator:\r\n                  CardStyleInterpolators.forFadeFromBottomAndroid,\r\n                transitionSpec: {\r\n                  open: config,\r\n                  close: closeConfig,\r\n                },\r\n              }}\r\n              initialRouteName={screen}\r\n              headerMode=\"float\"\r\n              animation=\"fade\"\r\n            >\r\n              <Stack.Screen name=\"Login\" component={Login} />\r\n              <Stack.Screen name=\"MainNavigation\" component={MainNavigation} />\r\n            </Stack.Navigator>\r\n          </NavigationContainer>\r\n        </ApplicationProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n","import React from 'react';\nimport Root from './src/Root.js'\n\nexport default function App() {\n  return <Root />\n}\n","module.exports = __webpack_public_path__ + \"static/media/background.f22edea8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ddc5f21a.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}